{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.tsx"],"names":["module","exports","maxLenght15","maxLenghtCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","placeholder","validate","required","name","component","Input","type","className","s","formSummaryError","captcha","src","connect","state","isAuth","auth","login","props","to","loginModule","formData","email","password","rememberMe"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,YAAc,2BAA2B,iBAAmB,gCAAgC,QAAU,yB,iCCDxH,sGAwCA,IAAIC,EAAcC,YAAiB,IAKnC,MAsCMC,EAAiBC,YAAkD,CAACC,KAAM,SAAzDD,CArCnB,EAAEE,eAAcC,QAAOC,gBAEnB,6BACI,0BAAMC,SAAUH,GACZ,6BACI,kBAAC,IAAD,CAAOI,YAAa,QACbC,SAAU,CAACC,IAAUX,GACrBY,KAAM,QACNC,UAAWC,OAEtB,6BACI,kBAAC,IAAD,CAAOL,YAAa,WAAYM,KAAM,WAC/BL,SAAU,CAACC,IAAUX,GACrBY,KAAM,WACNC,UAAWC,OAEtB,6BACI,kBAAC,IAAD,CAAOC,KAAM,WAAYH,KAAM,aAAcC,UAAWC,MAD5D,gBAGCR,GAAS,yBAAKU,UAAWC,IAAEC,kBAAlB,IAAsCZ,GAE/CC,GACD,yBAAKS,UAAWC,IAAEE,SACd,yBAAKC,IAAKb,IACV,kBAAC,IAAD,CAAOG,SAAUC,IACVC,KAAM,UACNC,UAAWC,OAGtB,6BACI,6CAcLO,sBALUC,IAAD,CACpBC,OAAQD,EAAME,KAAKD,OACnBhB,WAAYe,EAAME,KAAKjB,aAGa,CAACkB,WAA1BJ,CAhEoDK,IAM1C,IAAjBA,EAAMH,OACC,kBAAC,IAAD,CAAUI,GAAI,aAElB,yBAAKX,UAAWC,IAAEW,aACrB,qCACA,kBAAC1B,EAAD,CAAgBM,SATFqB,IACdH,EAAMD,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASV,UAQzCZ,WAAYmB,EAAMnB","file":"static/js/5.06425aca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginModule\":\"Login_loginModule__hm6u3\",\"formSummaryError\":\"Login_formSummaryError__29zkq\",\"captcha\":\"Login_captcha__LsP1q\"};","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport s from './Login.module.css'\r\nimport {Input} from \"../common/FormsControl/FormsControls\";\r\nimport {maxLenghtCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    captchaUrl: string | null\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string ) => void\r\n}\r\n\r\ntype LoginFormValuesType ={\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth === true) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div className={s.loginModule}>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\nlet maxLenght15 = maxLenghtCreator(30);\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> =\r\n    ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <Field placeholder={\"Login\"}\r\n                           validate={[required, maxLenght15]}\r\n                           name={\"email\"}\r\n                           component={Input}/>\r\n                </div>\r\n                <div>\r\n                    <Field placeholder={\"Password\"} type={\"password\"}\r\n                           validate={[required, maxLenght15]}\r\n                           name={\"password\"}\r\n                           component={Input}/>\r\n                </div>\r\n                <div>\r\n                    <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> remember me\r\n                </div>\r\n                {error && <div className={s.formSummaryError}> {error}</div>}\r\n\r\n                {captchaUrl &&\r\n                <div className={s.captcha}>\r\n                    <img src={captchaUrl}/>\r\n                    <Field validate={required}\r\n                           name={\"captcha\"}\r\n                           component={Input}/>\r\n                </div>}\r\n\r\n                <div>\r\n                    <button>Login</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm);\r\n\r\nconst mapStateToProps = (state: AppStateType):MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}