{"version":3,"sources":["redux/dialogs-reducer.js","api/api.js","utils/object-helpers.js","redux/users-reduser.js","assets/images/preloader.gif","components/common/Preloader/Preloader.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","redux/app-reducer.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","index.js","redux/auth-reducer.js","components/common/Preloader/preloader.js","components/common/Avatar/Avatar.js","components/Profile/MyPosts/MyPosts.module.css","utils/validators/validators.js","assets/images/defaultAvatar.png","components/Header/Header.module.css","components/common/Avatar/Ava.module.css","components/common/FormsControl/FormsControls.module.css","components/common/FormsControl/FormsControls.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","post","resultCode","unfollow","delete","getProfile","userId","console","log","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","requestUsers","page","dispatch","a","count","totalCount","followUnfollowFlow","apiMethod","actionCreator","bind","usersReducer","followed","filter","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","Header","props","header","src","loginBlock","isAuth","onClick","HeaderContainer","React","Component","render","this","connect","auth","initialized","appReducer","posts","likesCount","setStatus","setProfile","profileReducer","newPost","newPostText","photos","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebarPage","usersPage","authReducer","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","WithSuspense","Suspense","fallback","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","onDoubleClick","isOwner","value","defaultValue","onChange","e","currentTarget","autoFocus","onBlur","ProfileDataFormReduxForm","reduxForm","profileDescription","onSubmit","handleSubmit","formMain","formChild","error","formSummaryError","Field","component","Object","keys","contacts","key","contactItem","placeholder","Contact","contactTitle","contactValue","ProfileData","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","ProfileInfo","descriptionBlock","ava","isLarge","target","files","length","accept","initialValues","Post","likes","setLikes","maxLenght10","maxLenghtCreator","MyPosts","memo","postsElements","reverse","p","postsBlock","AddNewPostFormRedux","addPost","Textarea","validate","required","textarea","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","refreshProfile","params","autorizedUserId","history","push","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","file","getState","stopSubmit","_error","Promise","reject","withRouter","DialogsContainer","lazy","UsersContainer","LoginPage","App","initializeApp","exact","path","align","AppContainer","promise1","getAuthUserData","all","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","captchaUrl","setAuthUserData","payload","getCaptcha","url","Preloader","preloader","Ava","large","small","userPhoto","maxLenght","FormControl","input","meta","child","hasError","touched","formControl","children","restProps","Input"],"mappings":"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","file":"static/js/main.b5353973.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Димон'},\r\n        {id: 2, name: 'Катя'},\r\n        {id: 3, name: 'Андрей'},\r\n        {id: 4, name: 'Елизавета'},\r\n        {id: 5, name: 'Света'},\r\n        {id: 6, name: 'Валера'},\r\n        {id: 7, name: 'Саша'},\r\n        {id: 8, name: 'Витёк'},\r\n        {id: 9, name: 'Евгений'},\r\n        {id: 10, name: 'Евгения'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Привет!'},\r\n        {id: 2, message: 'Эти сообщения хранятся в стэйте и не уходят на сервер'},\r\n        {id: 3, message: 'Максимально допустимый размер сообщения 50 символов'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n   switch (action.type) {\r\n      case SEND_MESSAGE:\r\n           let body = action.newMessageBody;\r\n           return {\r\n               ...state,\r\n               messages: [ ...state.messages,{id: 6, message: body} ]\r\n           };\r\n\r\n\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"f639bb76-26f6-4a9e-bbc4-351a0c148c4d\"\r\n    }\r\n});\r\n\r\n export const usersAPI = {\r\n    getUsers (currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`,).then(response => {\r\n            return response.data;\r\n        });\r\n    },\r\n\r\n     follow (id) {\r\n         return instance.post(`follow/${id}`,).then(response => {\r\n             return response.data.resultCode;\r\n         });\r\n     },\r\n\r\n     unfollow (id) {\r\n         return instance.delete(`follow/${id}`,).then(response => {\r\n             return response.data.resultCode;\r\n         });\r\n     },\r\n\r\n     getProfile(userId){\r\n        console.log('Obsolete method. Please use ProfileAPI')\r\n         return profileAPI.getProfile(userId);\r\n     }\r\n\r\n}\r\nexport const profileAPI = {\r\n\r\n     getProfile(userId){\r\n         return instance.get(`profile/${userId}`);\r\n     },\r\n\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`);\r\n    },\r\n\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`,{ status: status});\r\n\r\n    },\r\n\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n     }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`);\r\n    },\r\n\r\n    login(email, password, rememberMe  = false, captcha){\r\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\r\n    },\r\n\r\n    logout(){\r\n        return instance.delete('auth/login');\r\n    },\r\n\r\n    captcha(){\r\n        return instance.get('security/get-captcha-url');\r\n    }\r\n}","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.ba787be4.gif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__18qag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2InU3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"ProfileInfo_picture__1wMHM\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2Q-eM\",\"ava\":\"ProfileInfo_ava__KX1SO\",\"profileDescription\":\"ProfileInfo_profileDescription__1rhUw\",\"contactItem\":\"ProfileInfo_contactItem__2DVqY\",\"formSummaryError\":\"ProfileInfo_formSummaryError__M76sE\",\"formMain\":\"ProfileInfo_formMain__WyRc_\",\"formChild\":\"ProfileInfo_formChild__19iKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__344Sk\",\"item\":\"Navbar_item__3pjw5\",\"activeLink\":\"Navbar_activeLink__1kvqt\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>- Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>- Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>- Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.seekpng.com/png/full/872-8723815_digital-marketing-services-digital-marketing-png-icons.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login}<br/> <button onClick={props.logout}>Log out</button></div>\r\n                :<NavLink to={'/login'}>Login</NavLink>\r\n            }\r\n         </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header'\r\nimport { connect } from 'react-redux';\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render () {\r\n        return <Header {...this.props} />\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login \r\n});\r\nexport default connect(mapStateToProps,{logout})(HeaderContainer);\r\n","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise1 = dispatch(getAuthUserData());\r\n    //let promise2 = dispatch(setProfile());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise1/*, promise2*/])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n}\r\n\r\n\r\nexport default appReducer;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\nconst SEND_PROFILE_INFO = 'SEND_PROFILE_INFO';\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Привет мир! Это мой первый пост!', likesCount: 12},\r\n        {id: 2, message: 'Как дела?', likesCount: 11},\r\n        {id: 3, message: 'Бла бла...', likesCount: 11},\r\n        {id: 4, message: 'Oh myyy...', likesCount: 3},\r\n        {id: 5, message: 'Максимальная длина поста ограничена 100 символами', likesCount: 5}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\nexport const sendProfileInfo = (photos) => ({type: SEND_PROFILE_INFO})\r\n\r\n\r\n\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(setStatus(status));\r\n                }\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const setProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getProfile(userId)\r\n            .then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\n\r\nexport const saveProfile = (formData) => async (dispatch, getState) => {\r\n    let response = await profileAPI.saveProfile(formData);\r\n    if (response.data.resultCode === 0) {\r\n       const userId =  getState().auth.userId\r\n        dispatch(setProfile(userId))\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n        dispatch(stopSubmit(\"editProfile\", {_error: message}));\r\n        return Promise.reject();\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default profileReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reduser\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\"\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebarPage: sidebarReducer,\r\n    usersPage:   usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/preloader\";\r\n\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div><Preloader/></div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false );\r\n    let [status,setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner ? setEditMode(true) : setEditMode(false);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n        return (\r\n            <>\r\n                {!editMode &&\r\n                    <div>\r\n                        <i><span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span></i>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input value={status}\r\n                               defaultValue={status}\r\n                               onChange={onStatusChange}\r\n                               autoFocus={true}\r\n                               onBlur={deactivateEditMode}\r\n                        />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\nconst ProfileDataForm = (props) => {\r\n\r\n    return <div className={s.profileDescription}>\r\n        <form onSubmit={props.handleSubmit} className={s.formMain}>\r\n            <div className={s.formChild}>\r\n\r\n                <button>Сохранить</button>\r\n                {props.error && <div className={s.formSummaryError}> {props.error}</div>}\r\n                <p><Field name=\"fullName\" component=\"input\" /></p>\r\n\r\n                <ProfileStatusWithHooks status={props.status} />\r\n\r\n                <p><b>Обо мне: </b></p>\r\n                <Field name=\"aboutMe\" component=\"textarea\" />\r\n                <br/>\r\n                <b>В поиске работы: </b>\r\n                <Field name=\"lookingForAJob\" component=\"input\" type=\"checkbox\"/>\r\n                <p><b>Скиллы: </b></p>\r\n                <Field name=\"lookingForAJobDescription\" component=\"textarea\"/>\r\n\r\n            </div>\r\n            <div className={s.formChild}>\r\n                <p><b>Контактная информация</b></p>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <div className={s.contactItem}>\r\n                        <b>{key}: </b><br/>\r\n                        <Field name={\"contacts.\" + key} component=\"input\" placeholder={key}/>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'editProfile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport Preloader from '../../common/Preloader/preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataFormReduxForm from \"./ProfileDataForm\";\r\nimport Ava from \"../../common/Avatar/Avatar\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            })\r\n\r\n    }\r\n\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n\r\n                <div className={s.ava}>\r\n                    <Ava isLarge={true} photos={props.profile.photos}/>\r\n\r\n                    {props.isOwner &&\r\n                    <input type={\"file\"}\r\n                           onChange={onMainPhotoSelected}\r\n                           accept={\".jpg, .jpeg, .png\"}\r\n                    />\r\n                    }\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={props.profile} {...props} onSubmit={onSubmit}/>\r\n                    : <ProfileData {...props} setEditMode={setEditMode}/>\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div><b>{contactTitle}: </b> {contactValue}</div>\r\n}\r\n\r\nconst ProfileData = (props) => {\r\n    return <div className={s.profileDescription}>\r\n        <div>\r\n            {props.isOwner &&\r\n            <button onClick={() => {\r\n                props.setEditMode(true)\r\n            }}>Редактировать</button>}\r\n\r\n            <p><b>{props.profile.fullName}</b></p>\r\n\r\n            <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus} isOwner={props.isOwner}/>\r\n\r\n            <p><b>Обо мне: </b>{props.profile.aboutMe}</p>\r\n            <b>В поиске работы: </b>{props.profile.lookingForAJob\r\n            ? \"да\"\r\n            : \"нет\"}\r\n            <br/>\r\n            {props.profile.lookingForAJob\r\n                ? <p><b>Скиллы: </b> {props.profile.lookingForAJobDescription}</p>\r\n                : null}\r\n            <div>\r\n                <p><b>Контактная информация</b></p>\r\n                {Object.keys(props.profile.contacts).map(key => {\r\n                    return <Contact key={key} contactTitle={key} contactValue={props.profile.contacts[key]}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React, {useState} from 'react';\r\nimport s from './Post.module.css';\r\nimport Ava from \"../../../common/Avatar/Avatar\";\r\n\r\nconst Post = (props) => {\r\n    let [likes, setLikes] = useState(props.likesCount)\r\n    return (\r\n        <div className={s.item}>\r\n            <Ava isLarge={false} photos={props.photos}/>\r\n            {props.message}\r\n            <div>\r\n                <button onClick={() => setLikes(likes + 1)}>Like {likes}</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLenghtCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControl/FormsControls\";\r\n\r\nconst maxLenght10 = maxLenghtCreator(100);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText)\r\n        value.newPostText = ''\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>Мои посты:</h3>\r\n            {props.isOwner && <AddNewPostFormRedux onSubmit={onAddPost}/>}\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea}\r\n                       type=\"text\" validate={[required, maxLenght10]}\r\n                       placeholder=\"Введите текст нового поста\"\r\n                       className={s.textarea}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Опубликовать</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         isOwner={props.isOwner}\r\n                         updateStatus={props.updateStatus}\r\n                         savePhoto={props.savePhoto}\r\n                         saveProfile={props.saveProfile}\r\n\r\n            />\r\n            <MyPostsContainer isOwner={props.isOwner}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {setProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId=this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.autorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount (){\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     status={this.props.status} updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    autorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n    })\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile,updateStatus,getStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n //   withAuthRedirect\r\n)(ProfileContainer);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Switch, HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {WithSuspense} from \"./hoc/withSuspense\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport ProfileContainer  from'./components/Profile/ProfileContainer'\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer' ));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer' ));\r\nconst LoginPage = React.lazy(() => import('./components/Login/Login' ));\r\n\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Route exact path='/'\r\n                               render={ () => <Redirect to={\"/profile\"}/> }/>\r\n\r\n                        <Route path='/dialogs'\r\n                               render={WithSuspense(DialogsContainer)}/>\r\n\r\n                        <Route path='/profile/:userId?'\r\n                               render={() =>{return <ProfileContainer/>}}/>\r\n\r\n                        <Route path='/users'\r\n                               render={WithSuspense(UsersContainer)}/>\r\n\r\n                        <Route path='/login'\r\n                               render={WithSuspense(LoginPage)}/>\r\n\r\n                        <Route path='/*'\r\n                               render={() => <h1 align=\"center\">404 NOT FOUND</h1>}/>\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <HashRouter /*basename={process.env.PUBLIC_URL}*/>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default SamuraiJSApp","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nimport SamuraiJSApp from \"./App\";\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'samurai-network/auth/SET_CAPTCHA_URL';\r\n\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {userId, email, login, isAuth}})\r\n\r\n\r\nexport const setCaptchaUrl = (url) =>\r\n    ({type: SET_CAPTCHA_URL, url})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe,captcha)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else if (response.data.resultCode === 10) {\r\n        dispatch(stopSubmit(\"login\", {_error: 'Введите символы, изображенные на картинке'}))\r\n        dispatch(getCaptcha())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}))\r\n    }\r\n\r\n}\r\n\r\nexport const getCaptcha = () => async (dispatch) => {\r\n    const response = await authAPI.captcha()\r\n    const captchaUrl = response.data.url\r\n    dispatch(setCaptchaUrl(captchaUrl))\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","import React from 'react'\r\nimport preloader from \"../../../assets/images/preloader.gif\";\r\nimport s from './Preloader.module.css'\r\n\r\nconst Preloader = () => {\r\n\r\n    return <div className={s.preloader}>\r\n        <img src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader","import React from 'react';\r\nimport userPhoto from \"../../../assets/images/defaultAvatar.png\";\r\nimport s from './Ava.module.css'\r\n\r\nexport const Ava = (props) => {\r\n    return <img className={props.isLarge ? s.large : s.small}\r\n                src={props.photos ? props.photos.large ? props.photos.large : userPhoto : userPhoto}/>\r\n\r\n}\r\n\r\nexport default Ava","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3C4Tv\",\"posts\":\"MyPosts_posts__Cs4U3\",\"textarea\":\"MyPosts_textarea__3DRvC\"};","\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Обязательное поле\";\r\n}\r\n\r\nexport const maxLenghtCreator = (maxLenght) => (value) => {\r\n    if (value.length > maxLenght) return `Длина сообщения более ${maxLenght} символов`;\r\n    return undefined;\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.b0ec8d5b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3aull\",\"loginBlock\":\"Header_loginBlock__3PCQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"large\":\"Ava_large__dBYIf\",\"small\":\"Ava_small__2kmyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1sK3C\",\"error\":\"FormsControls_error__2SmPG\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\"\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : '')}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...props.input} {...restProps} /> </FormControl>\r\n}\r\n\r\n\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...props.input} {...restProps} /> </FormControl>\r\n}"],"sourceRoot":""}